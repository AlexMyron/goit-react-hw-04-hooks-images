{"version":3,"sources":["components/Searchbar/Searchbar.styled.js","components/Searchbar/Searchbar.js","components/ImageGallery/ImageGalleryItem/ImageGalleryItem.styled.js","components/ImageGallery/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.styled.js","components/ImageGallery/ImageGallery.js","components/LoadMoreBtn/LoadMoreBtn.styled.js","components/LoadMoreBtn/LoadMoreBtn.js","App.styled.js","components/Modal/Modal.styled.js","components/Modal/Modal.js","apiRequests/apiRequests.js","App.js","reportWebVitals.js","index.js"],"names":["Form","styled","header","Bar","form","SearchBtn","button","SerchBtnLabel","span","SearchInput","input","Searchbar","Component","sendInputValue","useState","inputValue","setInputValue","onSubmit","e","preventDefault","type","value","onChange","currentTarget","autoComplete","autoFocus","placeholder","GalleryItemStyles","li","GalleryItemImg","img","ImageGalleryItem","queryResult","map","image","src","webformatURL","alt","tags","id","GalleryStyles","ul","ImageGallery","getImage","onClick","LoadBtnStyles","LoadMoreBtn","handleClick","AppWrapper","div","ModalBtn","ModalContent","Overlay","Modal","handleOverlayClick","handleKeycode","children","useEffect","handleKeydown","code","window","addEventListener","removeEventListener","fetchImages","query","page","fetch","then","res","ok","json","Promise","reject","Error","App","searchInput","setSearchInput","currentPage","setCurrentPage","apiResult","setApiResult","error","setError","openModal","setOpenModal","loader","setLoader","currentImageURL","setCurrentImageURL","scrollTo","top","document","documentElement","scrollHeight","behavior","fetchRequest","data","state","hits","catch","finally","toggleModal","isApiResult","length","className","target","nodeName","imageId","targetImage","find","largeImageURL","getImageUrl","Number","dataset","color","height","width","timeout","message","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9823883e.chunk.js","sourcesContent":["import styled from '@emotion/styled';\r\n\r\nconst Form = styled.header(`\r\n  top: 0;\r\n  left: 0;\r\n  position: sticky;\r\n  z-index: 1100;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  min-height: 64px;\r\n  padding-right: 24px;\r\n  padding-left: 24px;\r\n  padding-top: 12px;\r\n  padding-bottom: 12px;\r\n  color: #fff;\r\n  background-color: #3f51b5;\r\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\r\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\r\n\r\n`);\r\n\r\nconst Bar = styled.form(`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n  max-width: 600px;\r\n  background-color: #fff;\r\n  border-radius: 3px;\r\n  overflow: hidden;\r\n`);\r\n\r\nconst SearchBtn = styled.button(`\r\n  display: inline-block;\r\n  width: 48px;\r\n  height: 48px;\r\n  border: 0;\r\n  background-image: url('https://image.flaticon.com/icons/svg/149/149852.svg');\r\n  background-size: 40%;\r\n  background-repeat: no-repeat;\r\n  background-position: center;\r\n  opacity: 0.6;\r\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  cursor: pointer;\r\n  outline: none;\r\n\r\n  &:hover, &:focus{\r\n    opacity: 1;\r\n  }\r\n  `);\r\n\r\nconst SerchBtnLabel = styled.span(`\r\n  position: absolute;\r\n//   width: 1px;\r\n//   height: 1px;\r\n//   padding: 0;\r\n//   overflow: hidden;\r\n//   clip: rect(0, 0, 0, 0);\r\n//   white-space: nowrap;\r\n//   clip-path: inset(50%);\r\n//   border: 0;\r\n`);\r\n\r\nconst SearchInput = styled.input(`\r\n  display: inline-block;\r\n  width: 100%;\r\n  font: inherit;\r\n  font-size: 20px;\r\n  border: none;\r\n  outline: none;\r\n  padding-left: 4px;\r\n  padding-right: 4px;\r\n\r\n  ::plactholder{\r\n    font: inherit;\r\n    font-size: 18px;\r\n  }\r\n`);\r\n\r\nexport { Form, Bar, SearchBtn, SerchBtnLabel, SearchInput };\r\n","import PropTypes from 'prop-types';\r\nimport { useState } from 'react';\r\nimport { Component } from 'react';\r\nimport { Form, Bar, SearchBtn, SerchBtnLabel, SearchInput } from './Searchbar.styled';\r\n\r\nconst Searchbar = ({ sendInputValue }) => {\r\n  const [inputValue, setInputValue] = useState('');\r\n\r\n  const handleSearchInput = e => {\r\n    // this.setState({ inputValue: e.currentTarget.value });\r\n    setInputValue(e.currentTarget.value);\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    sendInputValue(inputValue);\r\n  };\r\n\r\n  return (\r\n    <Form>\r\n      <Bar onSubmit={handleSubmit}>\r\n        <SearchBtn type=\"submit\">\r\n          <SerchBtnLabel />\r\n        </SearchBtn>\r\n\r\n        <SearchInput\r\n          type=\"text\"\r\n          value={inputValue}\r\n          onChange={handleSearchInput}\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search images and photos\"\r\n        />\r\n      </Bar>\r\n    </Form>\r\n  );\r\n};\r\n\r\n// ----------------\r\nclass classedSearchbar extends Component {\r\n  state = {\r\n    inputValue: '',\r\n  };\r\n\r\n  handleSearchInput = e => {\r\n    this.setState({ inputValue: e.currentTarget.value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.sendInputValue(this.state.inputValue);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Form>\r\n        <Bar onSubmit={this.handleSubmit}>\r\n          <SearchBtn type=\"submit\">\r\n            <SerchBtnLabel />\r\n          </SearchBtn>\r\n\r\n          <SearchInput\r\n            type=\"text\"\r\n            value={this.state.inputValue}\r\n            onChange={this.handleSearchInput}\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n          />\r\n        </Bar>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nSearchbar.propTypes = { sendInputValue: PropTypes.func.isRequired };\r\n\r\nexport default Searchbar;\r\n","import styled from '@emotion/styled';\r\n\r\nconst GalleryItemStyles = styled.li(`\r\n  border-radius: 2px;\r\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\r\n  0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\r\n  `);\r\n\r\nconst GalleryItemImg = styled.img(`\r\nwidth: 100%;\r\nheight: 260px;\r\nobject-fit: cover;\r\ntransition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n\r\n\r\n&:hover, &:focus{\r\n    transform: scale(1.03);\r\n    cursor: zoom-in;\r\n  }\r\n`);\r\n\r\nexport { GalleryItemStyles, GalleryItemImg };\r\n","import PropTypes from 'prop-types';\r\nimport { GalleryItemStyles, GalleryItemImg } from './ImageGalleryItem.styled';\r\n\r\nconst ImageGalleryItem = ({ queryResult }) => {\r\n  return (\r\n    <>\r\n      {queryResult.map(image => {\r\n        return (\r\n          <GalleryItemStyles key={image.id}>\r\n            <GalleryItemImg src={image.webformatURL} alt={image.tags} data-id={image.id} />\r\n          </GalleryItemStyles>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nImageGalleryItem.propTypes = {\r\n  queryResult: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import styled from '@emotion/styled';\r\n\r\nconst GalleryStyles = styled.ul(`\r\n  display: grid;\r\n  max-width: calc(100vw - 48px);\r\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\r\n  grid-gap: 16px;\r\n  margin-top: 0;\r\n  margin-bottom: 0;\r\n  padding: 0;\r\n  list-style: none;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n`);\r\n\r\nexport default GalleryStyles;\r\n","import PropTypes from 'prop-types';\r\nimport ImageGalleryItem from './ImageGalleryItem';\r\nimport GalleryStyles from './ImageGallery.styled';\r\n\r\nconst ImageGallery = ({ queryResult, getImage }) => {\r\n  return (\r\n    <GalleryStyles onClick={getImage}>\r\n      <ImageGalleryItem queryResult={queryResult} />\r\n    </GalleryStyles>\r\n  );\r\n};\r\n\r\nImageGallery.propTypes = {\r\n  queryResult: PropTypes.array.isRequired,\r\n  getImage: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGallery;\r\n","import styled from '@emotion/styled';\r\n\r\nconst LoadBtnStyles = styled.button(`\r\n  width: 100px;\r\n    margin: 0 auto;\r\n`);\r\n\r\nexport default LoadBtnStyles;\r\n","import PropTypes from 'prop-types';\r\nimport LoadBtnStyles from './LoadMoreBtn.styled';\r\n\r\nconst LoadMoreBtn = ({ handleClick }) => {\r\n  return (\r\n    <LoadBtnStyles type=\"button\" onClick={handleClick}>\r\n      Load more\r\n    </LoadBtnStyles>\r\n  );\r\n};\r\n\r\nLoadMoreBtn.propTypes = { handleClick: PropTypes.func.isRequired };\r\n\r\nexport default LoadMoreBtn;\r\n","import styled from '@emotion/styled';\r\n\r\nconst AppWrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr;\r\n  grid-gap: 16px;\r\n  padding-bottom: 24px;\r\n`;\r\n\r\nconst ModalBtn = styled.button(`\r\n  display: block;\r\n  margin-left: auto;\r\n  margin-right: 0;\r\n  margin-bottom: 5px;\r\n\r\n  padding: 8px 16px;\r\n  border-radius: 2px;\r\n  background-color: #3f51b5;\r\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  text-align: center;\r\n  color: #fff;\r\n  border: 0;\r\n  text-decoration: none;\r\n  cursor: pointer;\r\n  font-family: inherit;\r\n  font-size: 18px;\r\n  line-height: 24px;\r\n  font-style: normal;\r\n  font-weight: 500;\r\n  min-width: auto;\r\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\r\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\r\n\r\n  &:hover,\r\n  &:focus {\r\n    background-color: #303f9f;\r\n  }\r\n}\r\n\r\n`);\r\n\r\nexport { AppWrapper, ModalBtn };\r\n","import styled from '@emotion/styled';\r\n\r\nconst ModalContent = styled.div(`\r\n  \r\n\r\n  max-width: calc(100vw - 48px);\r\n  max-height: calc(100vh - 24px);\r\n`);\r\n\r\nconst Overlay = styled.div(`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: rgba(0, 0, 0, 0.8);\r\n  z-index: 1200;\r\n`);\r\n\r\nexport { ModalContent, Overlay };\r\n","import PropTypes from 'prop-types';\r\nimport { useEffect } from 'react';\r\nimport { ModalContent, Overlay } from './Modal.styled';\r\nimport React, { Component } from 'react';\r\n\r\nconst Modal = ({ handleOverlayClick, handleKeycode, children }) => {\r\n  useEffect(() => {\r\n    const handleKeydown = e => {\r\n      if (e.code !== 'Escape') return;\r\n      handleKeycode();\r\n    };\r\n\r\n    window.addEventListener('keydown', handleKeydown);\r\n\r\n    return () => {\r\n      window.removeEventListener('keydown', handleKeydown);\r\n    };\r\n  });\r\n\r\n  return (\r\n    <Overlay onClick={handleOverlayClick}>\r\n      <ModalContent>{children}</ModalContent>\r\n    </Overlay>\r\n  );\r\n};\r\n\r\n// -----------------\r\nclass classedModal extends Component {\r\n  componentDidMount = () => {\r\n    window.addEventListener('keydown', this.handleKeydown);\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handleKeydown);\r\n  }\r\n\r\n  handleKeydown = e => {\r\n    if (e.code !== 'Escape') return;\r\n    this.props.handleKeycode();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Overlay onClick={this.props.handleOverlayClick}>\r\n        <ModalContent>{this.props.children}</ModalContent>\r\n      </Overlay>\r\n    );\r\n  }\r\n}\r\n\r\nModal.propTypes = { handleOverlayClick: PropTypes.func.isRequired };\r\n\r\nexport default Modal;\r\n","const fetchImages = (query, page) => {\r\n  return fetch(`https://pixabay.com/api/?q=${query}&page=${page}&key=22046149-41a2515b5a783e6a5f4bfbfcc&image_type=photo&orientation=horizontal&per_page=12\r\n`).then(res => {\r\n    if (res.ok) {\r\n      return res.json();\r\n    }\r\n    return Promise.reject(new Error('Something went wrong'));\r\n  });\r\n};\r\n\r\nexport default fetchImages;\r\n","import React, { Component } from 'react';\nimport { useEffect, useState } from 'react';\nimport Loader from 'react-loader-spinner';\nimport './App.css';\nimport Searchbar from './components/Searchbar';\nimport ImageGallery from './components/ImageGallery';\nimport LoadMoreBtn from './components/LoadMoreBtn';\nimport { AppWrapper, ModalBtn } from './App.styled';\nimport Modal from './components/Modal';\nimport fetchImages from './apiRequests/apiRequests';\n\nconst App = () => {\n  const [searchInput, setSearchInput] = useState('');\n  const [currentPage, setCurrentPage] = useState(1);\n  const [apiResult, setApiResult] = useState([]);\n  const [error, setError] = useState('');\n  const [openModal, setOpenModal] = useState(false);\n  const [loader, setLoader] = useState(false);\n  // const [currentImageId, setCurrentImageId] = useState('');\n  const [currentImageURL, setCurrentImageURL] = useState('');\n\n  useEffect(() => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n  });\n\n  const getImageUrl = imageId => {\n    const targetImage = apiResult.find(image => {\n      return image.id === imageId;\n    });\n\n    setCurrentImageURL(targetImage.largeImageURL);\n    return targetImage.largeImageURL;\n  };\n\n  const showModal = e => {\n    if (e.target.nodeName !== 'IMG') return;\n    const imageId = Number(e.target.dataset.id);\n\n    getImageUrl(imageId);\n    setOpenModal(true);\n  };\n\n  const fetchRequest = (query, page) => {\n    setLoader(true);\n\n    fetchImages(query, page)\n      .then(data => setApiResult(state => [...state, ...data.hits]))\n      .catch(error => setError(error))\n      .finally(() => setLoader(false));\n  };\n\n  const handleSearchinput = searchInput => {\n    setSearchInput(searchInput);\n\n    setCurrentPage(1);\n    setApiResult([]);\n    fetchRequest(searchInput, currentPage);\n  };\n\n  const handleLoadMore = e => {\n    // const { searchInput, currentPage } = this.state;\n    // this.setState({ currentPage: currentPage + 1 });\n    setCurrentPage(state => state + 1);\n\n    fetchRequest(searchInput, currentPage + 1);\n  };\n\n  const toggleModal = () => {\n    setOpenModal(!openModal);\n  };\n\n  const closeModal = e => {\n    if (e.target.nodeName === 'IMG') return;\n    toggleModal();\n  };\n\n  const isApiResult = apiResult.length > 0;\n\n  return (\n    <AppWrapper className=\"App\">\n      <Searchbar sendInputValue={handleSearchinput} />\n      <ImageGallery queryResult={apiResult} getImage={showModal} />\n      {loader && (\n        <Loader\n          className=\"loaderIcon\"\n          type=\"ThreeDots\"\n          color=\"#00BFFF\"\n          height={100}\n          width={100}\n          timeout={300000}\n        />\n      )}\n      {openModal && (\n        <Modal handleOverlayClick={closeModal} handleKeycode={toggleModal}>\n          <ModalBtn type=\"button\">Close</ModalBtn>\n          <img src={currentImageURL} alt=\"\" key=\"null\" />\n        </Modal>\n      )}\n      {error && <p>Woops... {error.message}</p>}\n      {isApiResult && <LoadMoreBtn handleClick={handleLoadMore} />}\n    </AppWrapper>\n  );\n};\nclass classedApp extends Component {\n  state = {\n    searchInput: '',\n    currentPage: 1,\n    apiResult: [],\n    error: '',\n    openModal: false,\n    loader: false,\n    currentImageId: '',\n    currentImageURL: '',\n  };\n\n  componentDidUpdate(prevState, prevProps) {\n    if (this.state !== prevProps) {\n      window.scrollTo({\n        top: document.documentElement.scrollHeight,\n        behavior: 'smooth',\n      });\n    }\n  }\n\n  showModal = e => {\n    if (e.target.nodeName !== 'IMG') return;\n    const imageId = Number(e.target.dataset.id);\n\n    this.getImageUrl(imageId);\n    this.setState({ openModal: true });\n  };\n\n  getImageUrl = imageId => {\n    const targetImage = this.state.apiResult.find(image => {\n      return image.id === imageId;\n    });\n\n    this.setState({ currentImageURL: targetImage.largeImageURL });\n    return targetImage.largeImageURL;\n  };\n\n  handleSearchinput = searchInput => {\n    this.setState({ searchInput });\n\n    const { currentPage } = this.state;\n\n    this.setState({ currentPage: 1, apiResult: [] });\n    this.fetchRequest(searchInput, currentPage);\n  };\n\n  fetchRequest(query, page) {\n    this.setState({ loader: true });\n\n    fetchImages(query, page)\n      .then(data =>\n        this.setState(prevState => {\n          const newValue = [...prevState.apiResult, ...data.hits];\n          return { apiResult: newValue };\n        }),\n      )\n      .catch(error => this.setState({ error }))\n      .finally(() => this.setState({ loader: false }));\n  }\n\n  handleLoadMore = e => {\n    const { searchInput, currentPage } = this.state;\n    this.setState({ currentPage: currentPage + 1 });\n\n    this.fetchRequest(searchInput, currentPage + 1);\n  };\n\n  toggleModal = () => {\n    this.setState(({ openModal }) => ({ openModal: !openModal }));\n  };\n\n  closeModal = e => {\n    if (e.target.nodeName === 'IMG') return;\n    this.toggleModal();\n  };\n\n  render() {\n    const { openModal, apiResult, loader, currentImageURL, error } = this.state;\n    const isApiResult = this.state.apiResult.length > 0;\n\n    return (\n      <AppWrapper className=\"App\">\n        <Searchbar sendInputValue={this.handleSearchinput} />\n        <ImageGallery queryResult={apiResult} getImage={this.showModal} />\n        {loader && (\n          <Loader\n            className=\"loaderIcon\"\n            type=\"ThreeDots\"\n            color=\"#00BFFF\"\n            height={100}\n            width={100}\n            timeout={300000}\n          />\n        )}\n        {openModal && (\n          <Modal handleOverlayClick={this.closeModal} handleKeycode={this.toggleModal}>\n            <ModalBtn type=\"button\">Close</ModalBtn>\n            <img src={currentImageURL} alt=\"\" key=\"null\" />\n          </Modal>\n        )}\n        {error && <p>Woops... {error.message}</p>}\n        {isApiResult && <LoadMoreBtn handleClick={this.handleLoadMore} />}\n      </AppWrapper>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\nreportWebVitals();\n"],"sourceRoot":""}